# Environment Configuration
NODE_ENV = development
PORT = 3010

# Database Configuration
# Qdrant Configuration
QDRANT_HOST = 127.0.0.1
QDRANT_PORT = 6333
# QDRANT_COLLECTION = code-snippets

# NebulaGraph Configuration
NEBULA_HOST = 127.0.0.1
NEBULA_PORT = 9669
NEBULA_USERNAME = root
NEBULA_PASSWORD = nebula
# NEBULA_SPACE = code_graphs
NEBULA_VID_TYPE_LENGTH = 128

# Embedding Configuration
EMBEDDING_PROVIDER = siliconflow
# 可选：
#  - openai
#  - ollama
#  - gemini
#  - mistral
#  - siliconflow (默认)
#  - custom1
#  - custom2
#  - custom3

# Skip unavailable provider checks to reduce unnecessary network requests
# Set to 'true' to skip checks for providers that are known to be unavailable
SKIP_UNAVAILABLE_PROVIDER_CHECKS = true

# Project Management Configuration
PROJECT_ALLOW_REINDEX = true

OPENAI_BASE_URL = https://api.openai.com
OPENAI_API_KEY = your-openai-api-key-here
OPENAI_MODEL = text-embedding-ada-002
OPENAI_DIMENSIONS = 1536

# Alternative embedding providers
OLLAMA_BASE_URL = http://localhost:11434
OLLAMA_MODEL = nomic-embed-text
OLLAMA_DIMENSIONS = 768

GEMINI_API_KEY = your-gemini-api-key-here
GEMINI_BASE_URL = https://generativelanguage.googleapis.com
GEMINI_MODEL = embedding-001
GEMINI_DIMENSIONS = 768

MISTRAl_API_KEY = your-mistral-api-key-here
MISTRAL_BASE_URL = https://api.mistral.ai
MISTRAL_MODEL = mistral-embed
MISTRAL_DIMENSIONS = 1024

SILICONFLOW_API_KEY = your-siliconflow-api-key-here
SILICONFLOW_BASE_URL = https://api.siliconflow.cn/v1
SILICONFLOW_MODEL = BAAI/bge-m3
SILICONFLOW_DIMENSIONS = 1024

# Custom embedder configurations (set your URLs in .env file)
CUSTOM_CUSTOM1_API_KEY = your-custom1-api-key-here
CUSTOM_CUSTOM1_BASE_URL = 
CUSTOM_CUSTOM1_MODEL = your-custom1-model-here
CUSTOM_CUSTOM1_DIMENSIONS = 768

CUSTOM_CUSTOM2_API_KEY = your-custom2-api-key-here
CUSTOM_CUSTOM2_BASE_URL = 
CUSTOM_CUSTOM2_MODEL = your-custom2-model-here
CUSTOM_CUSTOM2_DIMENSIONS = 768

CUSTOM_CUSTOM3_API_KEY = your-custom3-api-key-here
CUSTOM_CUSTOM3_BASE_URL = 
CUSTOM_CUSTOM3_MODEL = your-custom3-model-here
CUSTOM_CUSTOM3_DIMENSIONS = 768

# Logging Configuration
LOG_LEVEL = debug
LOG_FORMAT = json

# Search Configuration
SEARCH_MOCK_MODE = false

# Monitoring Configuration
ENABLE_METRICS = true
METRICS_PORT = 9090
PROMETHEUS_TARGET_DIR = ./etc/prometheus

# File Processing Configuration
MAX_FILE_SIZE = 10485760
SUPPORTED_EXTENSIONS = .ts,.js,.py,.java,.go,.rs,.cpp,.c,.h
INDEX_BATCH_SIZE = 100
CHUNK_SIZE = 1000
OVERLAP_SIZE = 200

# Memory Configuration
MEMORY_THRESHOLD = 75
BATCH_MEMORY_THRESHOLD = 75
MAX_MEMORY_MB = 2048
MEMORY_WARNING_THRESHOLD = 90
MEMORY_CRITICAL_THRESHOLD = 95
MEMORY_EMERGENCY_THRESHOLD = 98
NODE_OPTIONS = "--max-old-space-size=2048"

# Static Analysis Configuration
SEMGREP_ENABLED = true
SEMGREP_CLI_PATH = semgrep
SEMGREP_RULES_DIR = ./config/semgrep-rules
SEMGREP_TIMEOUT = 300
SEMGREP_MAX_TARGET_BYTES = 1000000
SEMGREP_MAX_CONCURRENT_SCANS = 5
SEMGREP_CACHE_ENABLED = true
SEMGREP_CACHE_TTL = 3600
SEMGREP_SCAN_ON_CHANGE = true
SEMGREP_RESULT_RETENTION_DAYS = 30

# Redis Configuration
REDIS_ENABLED = true
REDIS_URL = redis://localhost:6379
REDIS_MAXMEMORY = 128mb
REDIS_USE_MULTI_LEVEL = true
REDIS_TTL_EMBEDDING = 86400
REDIS_TTL_SEARCH = 3600
REDIS_TTL_GRAPH = 1800
REDIS_TTL_PROGRESS = 300
REDIS_RETRY_ATTEMPTS = 3
REDIS_RETRY_DELAY = 1000
REDIS_POOL_MIN = 1
REDIS_POOL_MAX = 5

# Cache Configuration
CACHE_CLEANUP_INTERVAL = 600000

# Static Analysis Configuration
SEMGREP_ENABLED = true
SEMGREP_CLI_PATH = semgrep
SEMGREP_RULES_DIR = ./config/semgrep-rules
SEMGREP_ENHANCED_RULES_PATH = ./config/enhanced-rules
SEMGREP_TIMEOUT = 300
SEMGREP_MAX_TARGET_BYTES = 1000000
SEMGREP_MAX_CONCURRENT_SCANS = 5
SEMGREP_CACHE_ENABLED = true
SEMGREP_CACHE_TTL = 3600
SEMGREP_SCAN_ON_CHANGE = true

# Grafana Configuration
GRAFANA_ADMIN_PASSWORD=admin123
GRAFANA_PORT=3100
SEMGREP_RESULT_RETENTION_DAYS = 30
